{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;sBAQc,QAAQ;;;;4BACJ,eAAe;;;;oBAChB,QAAQ;;;;AACzB,IAAI,GAAG,GAAG,+BAAM,QAAQ,CAAC,CAAC;;;;;;;IAMpB,MAAM;YAAN,MAAM;;AACC,WADP,MAAM,CACE,IAAI,EAAE,OAAO,EAAE;0BADvB,MAAM;;AAEN,+BAFA,MAAM,6CAEA,IAAI,EAAE;AACZ,QAAI,CAAC,OAAO,GAAG,OAAO,CAAC;GACxB;;;;;;;eAJC,MAAM;;WASD,qBAAG;AACV,aAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;;SAXG,MAAM;;;qBAcG,YAAM;AACnB,cAAY,CAAC;AACb,SAAO;AACL,QAAI,EAAE,SAAS,IAAI,CAAC,GAAG,EAAE;;AAEvB,UAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;AAElC,UAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEpD,UAAI,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,EAChC,GAAG,CAAC,KAAK,CACP,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EACzB,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EACjC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;KACpC;AACD,eAAS,oBAAE,KAAK,CAAC;AACf,UAAI,EAAE,QAAQ;KACf,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;AACzB,YAAQ,EAAE,OAAO,CAAC,aAAa,CAAC;;;AAGhC,QAAI,EAAE,MAAM;GACb,CAAC;CACH","file":"index.js","sourcesContent":["/**\n * Takeshi Iwana aka iwatakeshi\n * MIT 2015\n * Router\n * This module parses the routes\n * and sets the dot notation\n * according to the path.\n */\nimport _ from 'lodash';\nimport debug from 'gengojs-debug';\nimport Path from './path';\nvar log = debug('router');\n\n/**\n * @class Router\n * @extends Path\n */\nclass Router extends Path {\n  constructor(path, enabled) {\n      super(path);\n      this.enabled = enabled;\n    }\n    /**\n     * Determines if router is enabled\n     * @return {Boolean} Returns true if router is enabled.\n     */\n  isEnabled() {\n    return this.enabled;\n  }\n}\n\nexport default () => {\n  'use strict';\n  return {\n    main: function ship(req) {\n      // Set options\n      var options = this.options.router;\n      // Expose internal API\n      this.router = new Router(req.path, options.enabled);\n      // Debug\n      if (this.router && options.enabled)\n        log.debug(\n          'path:', this.router.path,\n          'toArray:', this.router.toArray(),\n          'toDot:', this.router.toDot());\n    },\n    package: _.merge({\n      type: 'router'\n    }, require('../package')),\n    defaults: require('../defaults'),\n    // Export the class for\n    // test purposes\n    mock: Router\n  };\n};"],"sourceRoot":"/source/"}